@model BBBZ.Models.MenuItemViewModel

@{
    ViewBag.Title = "Create";
    
}

<h2>Create</h2>

<div class="form-horizontal">
    <h4>Menu</h4>
    <hr />
    <div>
        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-xs btn-warning" })
    </div>

    @Html.ValidationSummary(false, null, new { @class = "alert alert-danger" })


    <div class="form-group">
       @Html.LabelFor(model => model.ItemType, new { @class = "control-label col-md-2" })
       <div class="col-md-6">
            @using (Html.BeginForm("Create", "MenuItem", FormMethod.Get)) 
            { 
                @Html.DropDownListFor(model=>model.ItemType, new SelectList(Extenisons.GetAllMenuTypes()),string.Empty, new { @class = "form-control", onchange = "submit()" })
                @Html.ValidationMessageFor(model => model.ItemType, null, new { @class = "has-error" })
                @Html.HiddenFor(model => model.selectedMenuTypeID)
            }
       </div>
    </div>

    @if (Model.AllMenuTypes != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.selectedMenuTypeID, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @using (Html.BeginForm("Create", "MenuItem", FormMethod.Get))
                {
                    @Html.DropDownListFor(model => model.selectedMenuTypeID, new SelectList(Model.AllMenuTypes, "ID", "Title", string.Empty), string.Empty, new { @class = "form-control", onchange = "submit()" })
                    @Html.HiddenFor(model => model.ItemType)
                }
            </div>
        </div>
    }
   
    @using (Html.BeginForm("Create", "MenuItem", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        @Html.HiddenFor(model => model.selectedMenuTypeID)
        @Html.HiddenFor(model => model.ItemType)
        @Html.HiddenFor(model => model.TheMenu.Type)
        if((Model.TheMenu.Type = "SinglePage") != ""){}
        
        if (Model.AllMenus != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.selectedParentID, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                        @Html.DropDownListFor(model => model.selectedParentID, new SelectList(Model.AllMenus, "ID", "Title", string.Empty), string.Empty, new { @class = "form-control" })
                </div>
            </div>
        }
    
        <div class="form-group">
            @Html.LabelFor(model => model.TheMenu.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.TheMenu.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TheMenu.Title, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheMenu.Note, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.TheMenu.Note, new { @class = "form-control" })
            </div>
        </div>

        if (string.IsNullOrEmpty(Model.ItemType) == false)
        {
            if (Model.ItemType.ToLower() == "link")
            { 
                <div class="form-group">
                    @Html.LabelFor(model => model.TheMenu.Url, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TheMenu.Url, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TheMenu.Url, null, new { @class = "has-error" })
                    </div>
                </div>
            }
            else if (Model.ItemType.ToLower() == "singlepage")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.selectedContentID, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.selectedContentID, new SelectList(Model.AllContents, "ID", "Title"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.selectedContentID, null, new { @class = "has-error" })
                    </div>
                </div>                
            }
            else if (Model.ItemType.ToLower() == "category")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.selectedCategoryID, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.selectedCategoryID, new SelectList(Model.AlllCategories, "ID", "Title"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.selectedCategoryID, null, new { @class = "has-error" })
                    </div>
                </div>
            }
        }
        
        <div class="form-group">
            @Html.LabelFor(model => model.TheMenu.Published, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.TheMenu.Published, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheMenu.OpenInSameWindow, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.TheMenu.OpenInSameWindow, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.selectedAccessID, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.selectedAccessID, new SelectList(Model.AllViewLevels, "ID", "Title"), new { @class = "form-control" })
            </div>
        </div>
                
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success btn-sm" />
            </div>
        </div>
    }
</div>
