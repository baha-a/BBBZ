@model BBBZ.Models.Menu

@{
    ViewBag.Title = "Details";
    
}

<h2>Details</h2>

<div>
    <h4>Menu</h4>
	<hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Note)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Note)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Url)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Url)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Type)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Published)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Published)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OpenInSameWindow)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OpenInSameWindow)
        </dd>


@if (Model.CategoryID != null)
{ 
        <dt>
            @Html.DisplayNameFor(model => model.CategoryID)
        </dt>
    
        <dd>
            <a href="@Url.Action("Details", "Category", new { id = Model.CategoryID })"> @Html.DisplayFor(model => model.CategoryID)  </a>
        </dd>
}

@if (Model.ContentID != null)
{
        <dt>
            @Html.DisplayNameFor(model => model.ContentID)
        </dt>
    
        <dd>
            <a href="@Url.Action("Details", "Contents", new  { id = Model.ContentID})"> @Html.DisplayFor(model => model.ContentID)  </a>
        </dd>
}
        <dt>
            @Html.DisplayNameFor(model => model.Language)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Language)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.Parent)
        </dt>

        <dd>
            @if (Model.Parent == null)
            {
                <i> no parent </i>
            }
            else if (string.IsNullOrEmpty(Model.Parent.Title) == false)
            {
                @Html.ActionLink(Model.Parent.Title, "Details", "MenuItem", new { id = Model.Parent.ID }, null)
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MenuType)
        </dt>

        <dd>
            @if (Model.MenuType == null)
            {
                <i> not selected yet</i>
            }
            else if (string.IsNullOrEmpty(Model.MenuType.Title) == false)
            {
                @Html.ActionLink(Model.MenuType.Title, "Details", "Menus", new { id = Model.MenuType.ID }, null)
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Access)
        </dt>

        <dd>
            @if(Model.Access != null)
            {
                <a href="@Url.Action("Details","ViewLevel", new { id = Model.Access.ID})"> @Html.DisplayFor(model => model.Access.Title)</a>
            }
        </dd>

        <dt>
            SubMenu
        </dt>

        <dd>
            @if (Model.Children == null)
            {
                <i> no child </i>
            }
            else
            {
                <ul>
                @foreach (var c in Model.Children)
                {
                    <li>
                        @Html.ActionLink(c.Title, "Details", "MenuItem", new { id = c.ID }, null)
                    </li>
                }
                </ul>
            }
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }, new { @class="btn btn-sm btn-success"}) |
    <input type="button" value="Back" class="btn btn-sm btn-warning" onclick="history.go(-1);" /> |
    @Html.ActionLink("See the List", "Index", null, new { @class="btn btn-sm btn-warning"})
</p>
