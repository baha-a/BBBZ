@model IEnumerable<BBBZ.Models.MenuViewModel>

@{
    ViewBag.Title = "Menu Items";
    
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", "MenuItem", (ViewBag.ID == null) ? null : new { selectedMenuTypeID = ViewBag.ID }, new { @class = "btn btn-success btn-sm" })
</p>
<table class="table table-bordered table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Menu.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Language)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Published)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Parent)
        </th>
        <th>
            Menu
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Menu.Access)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Menu.ID)
        </td>
        <td>
            @if (string.IsNullOrEmpty(item.Title) == false)
            {
                @Html.ActionLink(item.Title, "Details", "MenuItem", new { id = item.ID }, null)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Menu.Type)
        </td>
        <td>
            @if (item.Menu.TheLanguage != null)
            { 
                @Html.DisplayFor(modelItem => item.Menu.TheLanguage.Title)
            }
            else
            {
                <i> all </i>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Menu.Published)
        </td>
        <td>
            @if (item.Menu.Parent == null)
            {
                <i> no parent </i>
            }
            else if (string.IsNullOrEmpty(item.Menu.Parent.Title) == false)
            {
                @Html.ActionLink(item.Menu.Parent.Title, "Details", "MenuItem", new { id = item.Menu.Parent.ID }, null)
            }
        </td>
        <td>
            @if (item.Menu.MenuType == null)
            {
                <i> -- </i>
            }
            else if (string.IsNullOrEmpty(item.Menu.MenuType.Title) == false)
            {
                @Html.ActionLink(item.Menu.MenuType.Title, "Details", "Menus", new { id = item.Menu.MenuType.ID }, null)
            }
        </td>
        <td>
            @if(item.Menu.Access != null)
            {
                <a href="@Url.Action("Details","ViewLevel", new { id= item.Menu.Access.ID})">
                    @Html.DisplayFor(modelItem => item.Menu.Access.Title)
                </a>
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", "MenuItem", new { id = item.ID },null) | 
            @Html.ActionLink("Delete", "Delete", "MenuItem", new { id = item.ID },null)
        </td>
    </tr>
}

</table>
