@model BBBZ.Models.Category

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
		<div>
            <input type="button" value="Back" class="btn btn-sm btn-warning" onclick="history.go(-1);" />
		</div>
        @Html.ValidationSummary(false, null, new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alias, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Alias, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alias, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Url, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Url, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MetaDesc, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetaDesc, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaKey, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MetaKey, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetaKey, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaData, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MetaData, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetaData, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedByUsername, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.CreatedByUsername)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewParentID_helper, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.NewParentID_helper, new SelectList(Extenisons.GetAllCategories(), "ID", "Title", (Model.Parent == null) ? 0 : Model.Parent.ID), string.Empty, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Language, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.Language, new SelectList(Extenisons.GetAllLanguages(), "Code", "Title", Model.Language), string.Empty, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewAccessID_helper, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.NewAccessID_helper, new SelectList(Extenisons.GetAllViewLevels(), "ID", "Title", (Model.Access == null)? 0:Model.Access.ID), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Published, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Published, null, new { @class = "has-error" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success btn-sm" />
            </div>
        </div>
    </div>
}

